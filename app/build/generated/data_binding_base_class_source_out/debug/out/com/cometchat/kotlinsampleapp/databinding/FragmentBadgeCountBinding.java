// Generated by view binder compiler. Do not edit!
package com.cometchat.kotlinsampleapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cometchat.chatuikit.shared.views.CometChatBadge.CometChatBadge;
import com.cometchat.kotlinsampleapp.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentBadgeCountBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CometChatBadge badgeCount;

  @NonNull
  public final TextInputEditText badgeCountEdt;

  @NonNull
  public final TextInputLayout badgeCountLayout;

  @NonNull
  public final TextView badgeCountText;

  @NonNull
  public final TextView badgeCountTextDesc;

  @NonNull
  public final View bdBlue;

  @NonNull
  public final View bdGreen;

  @NonNull
  public final View bdPurple;

  @NonNull
  public final View bdRed;

  @NonNull
  public final View bdViolet;

  @NonNull
  public final View bdYellow;

  @NonNull
  public final LinearLayout parentView;

  private FragmentBadgeCountBinding(@NonNull LinearLayout rootView,
      @NonNull CometChatBadge badgeCount, @NonNull TextInputEditText badgeCountEdt,
      @NonNull TextInputLayout badgeCountLayout, @NonNull TextView badgeCountText,
      @NonNull TextView badgeCountTextDesc, @NonNull View bdBlue, @NonNull View bdGreen,
      @NonNull View bdPurple, @NonNull View bdRed, @NonNull View bdViolet, @NonNull View bdYellow,
      @NonNull LinearLayout parentView) {
    this.rootView = rootView;
    this.badgeCount = badgeCount;
    this.badgeCountEdt = badgeCountEdt;
    this.badgeCountLayout = badgeCountLayout;
    this.badgeCountText = badgeCountText;
    this.badgeCountTextDesc = badgeCountTextDesc;
    this.bdBlue = bdBlue;
    this.bdGreen = bdGreen;
    this.bdPurple = bdPurple;
    this.bdRed = bdRed;
    this.bdViolet = bdViolet;
    this.bdYellow = bdYellow;
    this.parentView = parentView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentBadgeCountBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentBadgeCountBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_badge_count, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentBadgeCountBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.badgeCount;
      CometChatBadge badgeCount = ViewBindings.findChildViewById(rootView, id);
      if (badgeCount == null) {
        break missingId;
      }

      id = R.id.badgeCountEdt;
      TextInputEditText badgeCountEdt = ViewBindings.findChildViewById(rootView, id);
      if (badgeCountEdt == null) {
        break missingId;
      }

      id = R.id.badgeCountLayout;
      TextInputLayout badgeCountLayout = ViewBindings.findChildViewById(rootView, id);
      if (badgeCountLayout == null) {
        break missingId;
      }

      id = R.id.badge_count_text;
      TextView badgeCountText = ViewBindings.findChildViewById(rootView, id);
      if (badgeCountText == null) {
        break missingId;
      }

      id = R.id.badge_count_text_desc;
      TextView badgeCountTextDesc = ViewBindings.findChildViewById(rootView, id);
      if (badgeCountTextDesc == null) {
        break missingId;
      }

      id = R.id.bdBlue;
      View bdBlue = ViewBindings.findChildViewById(rootView, id);
      if (bdBlue == null) {
        break missingId;
      }

      id = R.id.bdGreen;
      View bdGreen = ViewBindings.findChildViewById(rootView, id);
      if (bdGreen == null) {
        break missingId;
      }

      id = R.id.bdPurple;
      View bdPurple = ViewBindings.findChildViewById(rootView, id);
      if (bdPurple == null) {
        break missingId;
      }

      id = R.id.bdRed;
      View bdRed = ViewBindings.findChildViewById(rootView, id);
      if (bdRed == null) {
        break missingId;
      }

      id = R.id.bdViolet;
      View bdViolet = ViewBindings.findChildViewById(rootView, id);
      if (bdViolet == null) {
        break missingId;
      }

      id = R.id.bdYellow;
      View bdYellow = ViewBindings.findChildViewById(rootView, id);
      if (bdYellow == null) {
        break missingId;
      }

      LinearLayout parentView = (LinearLayout) rootView;

      return new FragmentBadgeCountBinding((LinearLayout) rootView, badgeCount, badgeCountEdt,
          badgeCountLayout, badgeCountText, badgeCountTextDesc, bdBlue, bdGreen, bdPurple, bdRed,
          bdViolet, bdYellow, parentView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
