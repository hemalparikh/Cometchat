// Generated by view binder compiler. Do not edit!
package com.cometchat.kotlinsampleapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cometchat.kotlinsampleapp.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHomeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialCardView calls;

  @NonNull
  public final MaterialCardView chats;

  @NonNull
  public final ImageView darkMode;

  @NonNull
  public final MaterialCardView groups;

  @NonNull
  public final ImageView lightMode;

  @NonNull
  public final ImageView logout;

  @NonNull
  public final MaterialCardView messages;

  @NonNull
  public final LinearLayout parentView;

  @NonNull
  public final MaterialCardView shared;

  @NonNull
  public final MaterialCardView users;

  private ActivityHomeBinding(@NonNull LinearLayout rootView, @NonNull MaterialCardView calls,
      @NonNull MaterialCardView chats, @NonNull ImageView darkMode,
      @NonNull MaterialCardView groups, @NonNull ImageView lightMode, @NonNull ImageView logout,
      @NonNull MaterialCardView messages, @NonNull LinearLayout parentView,
      @NonNull MaterialCardView shared, @NonNull MaterialCardView users) {
    this.rootView = rootView;
    this.calls = calls;
    this.chats = chats;
    this.darkMode = darkMode;
    this.groups = groups;
    this.lightMode = lightMode;
    this.logout = logout;
    this.messages = messages;
    this.parentView = parentView;
    this.shared = shared;
    this.users = users;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.calls;
      MaterialCardView calls = ViewBindings.findChildViewById(rootView, id);
      if (calls == null) {
        break missingId;
      }

      id = R.id.chats;
      MaterialCardView chats = ViewBindings.findChildViewById(rootView, id);
      if (chats == null) {
        break missingId;
      }

      id = R.id.dark_mode;
      ImageView darkMode = ViewBindings.findChildViewById(rootView, id);
      if (darkMode == null) {
        break missingId;
      }

      id = R.id.groups;
      MaterialCardView groups = ViewBindings.findChildViewById(rootView, id);
      if (groups == null) {
        break missingId;
      }

      id = R.id.light_mode;
      ImageView lightMode = ViewBindings.findChildViewById(rootView, id);
      if (lightMode == null) {
        break missingId;
      }

      id = R.id.logout;
      ImageView logout = ViewBindings.findChildViewById(rootView, id);
      if (logout == null) {
        break missingId;
      }

      id = R.id.messages;
      MaterialCardView messages = ViewBindings.findChildViewById(rootView, id);
      if (messages == null) {
        break missingId;
      }

      LinearLayout parentView = (LinearLayout) rootView;

      id = R.id.shared;
      MaterialCardView shared = ViewBindings.findChildViewById(rootView, id);
      if (shared == null) {
        break missingId;
      }

      id = R.id.users;
      MaterialCardView users = ViewBindings.findChildViewById(rootView, id);
      if (users == null) {
        break missingId;
      }

      return new ActivityHomeBinding((LinearLayout) rootView, calls, chats, darkMode, groups,
          lightMode, logout, messages, parentView, shared, users);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
