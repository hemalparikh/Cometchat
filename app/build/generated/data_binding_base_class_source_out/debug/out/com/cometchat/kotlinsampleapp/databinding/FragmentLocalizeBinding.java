// Generated by view binder compiler. Do not edit!
package com.cometchat.kotlinsampleapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cometchat.kotlinsampleapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLocalizeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatButton button;

  @NonNull
  public final RadioButton english;

  @NonNull
  public final RadioButton hindi;

  @NonNull
  public final TextView language;

  @NonNull
  public final TextView localizeOverview;

  @NonNull
  public final TextView localizeText;

  @NonNull
  public final LinearLayout parentView;

  @NonNull
  public final RadioGroup toggle;

  private FragmentLocalizeBinding(@NonNull LinearLayout rootView, @NonNull AppCompatButton button,
      @NonNull RadioButton english, @NonNull RadioButton hindi, @NonNull TextView language,
      @NonNull TextView localizeOverview, @NonNull TextView localizeText,
      @NonNull LinearLayout parentView, @NonNull RadioGroup toggle) {
    this.rootView = rootView;
    this.button = button;
    this.english = english;
    this.hindi = hindi;
    this.language = language;
    this.localizeOverview = localizeOverview;
    this.localizeText = localizeText;
    this.parentView = parentView;
    this.toggle = toggle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLocalizeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLocalizeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_localize, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLocalizeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button;
      AppCompatButton button = ViewBindings.findChildViewById(rootView, id);
      if (button == null) {
        break missingId;
      }

      id = R.id.english;
      RadioButton english = ViewBindings.findChildViewById(rootView, id);
      if (english == null) {
        break missingId;
      }

      id = R.id.hindi;
      RadioButton hindi = ViewBindings.findChildViewById(rootView, id);
      if (hindi == null) {
        break missingId;
      }

      id = R.id.language;
      TextView language = ViewBindings.findChildViewById(rootView, id);
      if (language == null) {
        break missingId;
      }

      id = R.id.localizeOverview;
      TextView localizeOverview = ViewBindings.findChildViewById(rootView, id);
      if (localizeOverview == null) {
        break missingId;
      }

      id = R.id.localize_text;
      TextView localizeText = ViewBindings.findChildViewById(rootView, id);
      if (localizeText == null) {
        break missingId;
      }

      LinearLayout parentView = (LinearLayout) rootView;

      id = R.id.toggle;
      RadioGroup toggle = ViewBindings.findChildViewById(rootView, id);
      if (toggle == null) {
        break missingId;
      }

      return new FragmentLocalizeBinding((LinearLayout) rootView, button, english, hindi, language,
          localizeOverview, localizeText, parentView, toggle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
